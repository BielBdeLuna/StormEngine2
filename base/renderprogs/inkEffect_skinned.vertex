/*
===========================================================================

Doom 3 BFG Edition GPL Source Code
Copyright (C) 1993-2012 id Software LLC, a ZeniMax Media company. 

This file is part of the Doom 3 BFG Edition GPL Source Code ("Doom 3 BFG Edition Source Code").  

Doom 3 BFG Edition Source Code is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Doom 3 BFG Edition Source Code is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with Doom 3 BFG Edition Source Code.  If not, see <http://www.gnu.org/licenses/>.

In addition, the Doom 3 BFG Edition Source Code is also subject to certain additional terms. You should have received a copy of these additional terms immediately following the terms and conditions of the GNU General Public License which accompanied the Doom 3 BFG Edition Source Code.  If not, please request a copy in writing from id Software at the address below.

If you have questions concerning this license or the applicable additional terms, you may contact in writing id Software LLC, c/o ZeniMax Media Inc., Suite 120, Rockville, Maryland 20850 USA.

===========================================================================
*/

#include "global.inc"

// User Renderparms start at 128 as per renderprogs.h

uniform float4 rpUser0 : register(c128);
uniform float4 rpUser1 : register(c129);
uniform float4 rpUser2 : register(c130);

uniform matrices_ubo { float4 matrices[408]; };

struct VS_IN {
	float4 position 	: POSITION;
	float2 texcoord 	: TEXCOORD0;
	float4 normal 		: NORMAL;
	float4 tangent 	: TANGENT;
	float4 color 		: COLOR0;
	float4 color2 		: COLOR1;
};

struct VS_OUT {
	float4 position	: POSITION;
	float4 genParms0	: TEXCOORD0;
	float4 genParms1	: TEXCOORD1;
	float4 genParms2	: TEXCOORD2;
};

void main( VS_IN vertex, out VS_OUT result ) {
	#include "skinning.inc"

	result.genParms0	= rpUser0; // inkAmount, rangeScale, rangeBias
	result.genParms1 	= rpUser1; // inkSize, inkScale, inkBias (near)
	result.genParms2 	= rpUser2; // inkSize, inkScale, inkBias (far)
}